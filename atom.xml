<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>流浪兔的博客</title>
  
  <subtitle>不折腾的人生怎么算一辈子</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-09-21T06:24:57.404Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>流浪兔</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DOJO---下拉框change事件</title>
    <link href="http://yoursite.com/2018/09/20/secondlog/"/>
    <id>http://yoursite.com/2018/09/20/secondlog/</id>
    <published>2018-09-20T07:34:18.000Z</published>
    <updated>2018-09-21T06:24:57.404Z</updated>
    
    <content type="html"><![CDATA[<h3 id="select-对象"><a href="#select-对象" class="headerlink" title="select 对象"></a>select 对象</h3><p>Dojo中提供select组件用于生成下拉框。</p><p>demo:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var options = [</span><br><span class="line">&#123;value:<span class="string">"value1"</span>,label:<span class="string">"optionText"</span>,selected:<span class="literal">false</span>&#125;,</span><br><span class="line">&#123;value:<span class="string">"value2"</span>,label:<span class="string">"optionText"</span>,selected:<span class="literal">true</span>&#125;</span><br><span class="line">];</span><br><span class="line">value//下拉选项的唯一标识，</span><br><span class="line">lable//下拉选项要显示的文本，</span><br><span class="line">selected//默认下拉选项是否选中，</span><br><span class="line">//注意：options可以扩展其他字段，便于属于操作，</span><br><span class="line"></span><br><span class="line">var selectDemo = new Select(&#123;</span><br><span class="line">name:<span class="string">"option"</span>,//字段</span><br><span class="line">style: style,//样式</span><br><span class="line">options: options</span><br><span class="line">&#125;);</span><br><span class="line">selectDemo.placeAt(divContainer);//divContainer是存放组件的区域</span><br></pre></td></tr></table></figure></p><p>DOJO/SELECT: <a href="http://dojotoolkit.org/reference-guide/1.8/dijit/form/Select.html" target="_blank" rel="noopener">dojo/select</a></p><h3 id="业务场景"><a href="#业务场景" class="headerlink" title="业务场景"></a>业务场景</h3><p>在动态生成的table中，行都有一个select对象，当点击每行的的下拉对象时，该行的数据单位会展示不同的效果<br>例如：下拉框有时间，和状态，百分比多种选项时，当选择时间时，该行的其中一个数据单位为ms，当选择百分比<br>时，该行的其中一个数据变成%（后台提供的仅有数据无单位）。</p><h3 id="divContainer-容器唯一"><a href="#divContainer-容器唯一" class="headerlink" title="divContainer 容器唯一"></a>divContainer 容器唯一</h3><p>动态生成的过程中，给容器一个唯一的id,因为整个table有多个下拉框，确定唯一标识，才可以成功批量生成table.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">divContainer.setAttribute(<span class="string">"id"</span>,i++);</span><br></pre></td></tr></table></figure><h3 id="change-事件"><a href="#change-事件" class="headerlink" title="change 事件"></a>change 事件</h3><p>例如操作其中一行的select的对象:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">selectDemo.on(<span class="string">"change"</span>,<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">//TODO</span><br><span class="line">selectDemo.set(<span class="string">"value"</span>,data.value);//data从后台获取的数据</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>当渲染table的时候，该下拉对象默认第一个下拉对象是options[0],渲染数据的过程是根据数据给出的value值设<br>置selectDemo的选中对象的。有时候data.value!=0,selectDemo则相当于发生了一次change事件，但是用户希望<br>在没有手动操作的情况下，不允许执行change引发的事件，这个bug我搞了半天，尝试很多方法，后来才发现，只需<br>要在数据渲染前设置一个flag = false，渲染数据后改变变量falg = true，if(flag)change的时候return回来，<br>具体如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">var flag = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(data != null)&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">selectDemo.set(<span class="string">"value"</span>,data.value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">selectDemo.on(<span class="string">"change"</span>,<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">//TODO</span><br><span class="line"><span class="keyword">if</span>(flag)&#123;</span><br><span class="line">flag = !flag;</span><br><span class="line"><span class="built_in">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">selectDemo.set(<span class="string">"value"</span>,data.value);//data从后台获取的数据</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;select-对象&quot;&gt;&lt;a href=&quot;#select-对象&quot; class=&quot;headerlink&quot; title=&quot;select 对象&quot;&gt;&lt;/a&gt;select 对象&lt;/h3&gt;&lt;p&gt;Dojo中提供select组件用于生成下拉框。&lt;/p&gt;
&lt;p&gt;demo:&lt;br&gt;&lt;f
      
    
    </summary>
    
    
      <category term="dojo/select/change.evt" scheme="http://yoursite.com/tags/dojo-select-change-evt/"/>
    
  </entry>
  
  <entry>
    <title>height auto 和 height</title>
    <link href="http://yoursite.com/2018/09/19/firstlog/"/>
    <id>http://yoursite.com/2018/09/19/firstlog/</id>
    <published>2018-09-19T06:45:36.441Z</published>
    <updated>2018-09-21T08:58:00.089Z</updated>
    
    <content type="html"><![CDATA[<h3 id="height-auto"><a href="#height-auto" class="headerlink" title="height:auto"></a>height:auto</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">&lt;div style=<span class="string">"height:auto"</span>&gt;我会随着内容多少而高度发生变化&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="height-100"><a href="#height-100" class="headerlink" title="height:100%"></a>height:100%</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">"height:100px;"</span>&gt;</span><br><span class="line">&lt;div style=<span class="string">"height:100%"</span>&gt;我要继承父元素的高度&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;height-auto&quot;&gt;&lt;a href=&quot;#height-auto&quot; class=&quot;headerlink&quot; title=&quot;height:auto&quot;&gt;&lt;/a&gt;height:auto&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hexo + github 搭建博客</title>
    <link href="http://yoursite.com/2018/09/18/zerolog/"/>
    <id>http://yoursite.com/2018/09/18/zerolog/</id>
    <published>2018-09-18T08:54:47.718Z</published>
    <updated>2018-09-21T09:25:44.478Z</updated>
    
    <content type="html"><![CDATA[<p>大家好，我是流浪兔，欢迎浏览我的博客。<br>终于搭建了一个属于自己的博客，这个过程也遇到过一些小坑，记录一下搭建博客的一个过程，希望对各位有所帮助。</p><h3 id="github-注册账户"><a href="#github-注册账户" class="headerlink" title="github 注册账户"></a>github 注册账户</h3><p>github 地址：<a href="https://github.com/" target="_blank" rel="noopener">go to github</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意：给自己起一个好听的名字奥，这样你的URL地址就会显得高大上一些（reposltory name）</span><br></pre></td></tr></table></figure><h3 id="安装node和git"><a href="#安装node和git" class="headerlink" title="安装node和git"></a>安装node和git</h3><p>这里省略一千字，具体可以问度娘</p><h3 id="hexo-安装"><a href="#hexo-安装" class="headerlink" title="hexo 安装"></a>hexo 安装</h3><p>hexo 是一个快速高效的node.js静态博客框架，hexo使用markdown解析文章（所以赶快下载一个markdown工具吧）,<br>hexo 的安装这里省略一千字<br>但是请牢记hexo常用的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo -clean //清除缓存文件</span><br><span class="line">hexo -g //生成静态文件</span><br><span class="line">hexo -s//启动本地服务，浏览本地效果</span><br><span class="line">hexo -d//把项目提交到github上，并且在https://yourname/yourname.github.io浏览效果</span><br></pre></td></tr></table></figure><p>认识hexo: <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo</a></p><p>你的博客生成后，可能对主题不满意，至于怎么改变主题这里省去一千字，因为网上都有，我想说的是，有时候你可能对生成的主题锦上添花，<br>不妨先熟悉一下hexo 对应主题下的模板文件，每个文件（不管是CSS还是HTML），都可进行扩展和更改。</p><h3 id="发布我的第一篇博客"><a href="#发布我的第一篇博客" class="headerlink" title="发布我的第一篇博客"></a>发布我的第一篇博客</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">start:</span><br><span class="line">hexo -n <span class="string">"firstLog"</span> //新建文章</span><br><span class="line">//编辑新生成的firstLog.md文件</span><br><span class="line">hexo -clean</span><br><span class="line">hexo -g</span><br><span class="line">hexo -d//发布即可</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">/*hexo -new page <span class="string">"firstFile"</span>//新建页面*/</span><br></pre></td></tr></table></figure><p>好了暂且分享这么多，有什么坑以后可大家再分享，谢谢。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;大家好，我是流浪兔，欢迎浏览我的博客。&lt;br&gt;终于搭建了一个属于自己的博客，这个过程也遇到过一些小坑，记录一下搭建博客的一个过程，希望对各位有所帮助。&lt;/p&gt;
&lt;h3 id=&quot;github-注册账户&quot;&gt;&lt;a href=&quot;#github-注册账户&quot; class=&quot;header
      
    
    </summary>
    
    
  </entry>
  
</feed>
